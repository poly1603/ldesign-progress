{"version":3,"file":"StackedProgress.cjs","sources":["../../src/components/StackedProgress.ts"],"sourcesContent":["import { StackedProgressOptions, StackLayer } from '../types';\nimport { ProgressBase } from '../base';\nimport { createElement, toPx } from '../utils';\n\n/**\n * StackedProgress - 3D 堆叠进度条\n */\nexport class StackedProgress extends ProgressBase<StackedProgressOptions> {\n  private wrapper!: HTMLElement;\n  private layers: HTMLElement[] = [];\n\n  protected getDefaultOptions(): Partial<StackedProgressOptions> {\n    return {\n      ...super.getDefaultOptions(),\n      width: 300,\n      height: 30,\n      layerCount: 3,\n      layerOffset: 5,\n      depth: 10,\n      colors: ['#409eff', '#67c23a', '#e6a23c'],\n    };\n  }\n\n  protected render(): void {\n    this.container.innerHTML = '';\n\n    const width = this.config.get('width') ?? 300;\n    const height = this.config.get('height') ?? 30;\n    const layerCount = this.config.get('layerCount') ?? 3;\n    const layerOffset = this.config.get('layerOffset') ?? 5;\n    const depth = this.config.get('depth') ?? 10;\n    const colors = this.config.get('colors') || ['#409eff', '#67c23a', '#e6a23c'];\n\n    // 创建包装器\n    this.wrapper = createElement('div', 'ld-progress-stacked', this.container);\n    this.wrapper.style.position = 'relative';\n    this.wrapper.style.width = toPx(width);\n    this.wrapper.style.height = toPx((height + layerOffset * layerCount + depth));\n    this.wrapper.style.perspective = '1000px';\n\n    const className = this.config.get('className');\n    if (className) {\n      this.wrapper.classList.add(className);\n    }\n\n    // 创建堆叠层\n    this.layers = [];\n    for (let i = 0; i < layerCount; i++) {\n      const layer = createElement('div', 'ld-progress-stacked__layer', this.wrapper);\n      layer.style.position = 'absolute';\n      layer.style.width = toPx(width);\n      layer.style.height = toPx(height);\n      layer.style.borderRadius = '10px';\n      layer.style.overflow = 'hidden';\n      layer.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\n      layer.style.top = `${i * layerOffset}px`;\n      layer.style.left = '0';\n      layer.style.zIndex = String(layerCount - i);\n\n      // 3D 效果\n      layer.style.transform = `translateZ(${i * depth}px)`;\n      layer.style.transformStyle = 'preserve-3d';\n\n      // 背景\n      const bg = createElement('div', 'ld-progress-stacked__bg', layer);\n      bg.style.width = '100%';\n      bg.style.height = '100%';\n      bg.style.backgroundColor = '#e4e7ed';\n      bg.style.opacity = String(0.3 + i * 0.1);\n\n      // 进度条\n      const bar = createElement('div', 'ld-progress-stacked__bar', layer);\n      bar.style.position = 'absolute';\n      bar.style.left = '0';\n      bar.style.top = '0';\n      bar.style.height = '100%';\n      bar.style.transition = 'width 0.3s ease';\n      bar.style.backgroundColor = colors[i % colors.length];\n      bar.style.boxShadow = `inset 0 0 10px rgba(255, 255, 255, 0.3)`;\n\n      this.layers.push(bar);\n    }\n\n    this.updateProgress(this.currentValue);\n  }\n\n  protected updateProgress(value: number): void {\n    const percentage = this.config.getPercentage(value);\n\n    // 更新所有层的进度\n    this.layers.forEach((layer, index) => {\n      // 每层有轻微的延迟效果\n      const delay = index * 0.05;\n      layer.style.transitionDelay = `${delay}s`;\n      layer.style.width = `${percentage}%`;\n    });\n  }\n}\n\n\n\n"],"names":["ProgressBase","createElement","toPx"],"mappings":"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"}