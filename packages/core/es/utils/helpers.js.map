{"version":3,"file":"helpers.js","sources":["../../src/utils/helpers.ts"],"sourcesContent":["/**\n * 工具函数集合\n */\n\n/**\n * 防抖函数\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n  return function (this: any, ...args: Parameters<T>) {\n    const context = this;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n/**\n * 节流函数\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean = false;\n  return function (this: any, ...args: Parameters<T>) {\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n}\n\n/**\n * 将数值转换为像素字符串\n */\nexport function toPx(value: string | number): string {\n  if (typeof value === 'number') {\n    return `${value}px`;\n  }\n  return value;\n}\n\n/**\n * 格式化百分比\n */\nexport function formatPercentage(value: number, decimals: number = 0): string {\n  return `${value.toFixed(decimals)}%`;\n}\n\n/**\n * 创建元素\n */\nexport function createElement(\n  tag: string,\n  className?: string,\n  parent?: HTMLElement\n): HTMLElement {\n  const element = document.createElement(tag);\n  if (className) {\n    element.className = className;\n  }\n  if (parent) {\n    parent.appendChild(element);\n  }\n  return element;\n}\n\n/**\n * 创建SVG元素\n */\nexport function createSVGElement(\n  tag: string,\n  attributes?: Record<string, string | number>\n): SVGElement {\n  const element = document.createElementNS('http://www.w3.org/2000/svg', tag);\n  if (attributes) {\n    Object.entries(attributes).forEach(([key, value]) => {\n      element.setAttribute(key, String(value));\n    });\n  }\n  return element;\n}\n\n/**\n * 设置多个属性\n */\nexport function setAttributes(\n  element: HTMLElement | SVGElement,\n  attributes: Record<string, string | number>\n): void {\n  Object.entries(attributes).forEach(([key, value]) => {\n    element.setAttribute(key, String(value));\n  });\n}\n\n/**\n * 线性插值\n */\nexport function lerp(start: number, end: number, t: number): number {\n  return start + (end - start) * t;\n}\n\n/**\n * 角度转弧度\n */\nexport function degToRad(degrees: number): number {\n  return (degrees * Math.PI) / 180;\n}\n\n/**\n * 弧度转角度\n */\nexport function radToDeg(radians: number): number {\n  return (radians * 180) / Math.PI;\n}\n\n/**\n * 限制数值在范围内\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * 检查是否为有效颜色\n */\nexport function isValidColor(color: string): boolean {\n  const s = new Option().style;\n  s.color = color;\n  return s.color !== '';\n}\n\n/**\n * 生成唯一ID\n */\nlet idCounter = 0;\nexport function generateId(prefix: string = 'progress'): string {\n  return `${prefix}-${++idCounter}`;\n}\n\n/**\n * 深度合并对象\n */\nexport function deepMerge<T extends Record<string, any>>(\n  target: T,\n  ...sources: Partial<T>[]\n): T {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        deepMerge(target[key] as any, source[key] as any);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return deepMerge(target, ...sources);\n}\n\n/**\n * 检查是否为对象\n */\nfunction isObject(item: any): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * 解析渐变色\n */\nexport function parseGradient(\n  colors: string | string[],\n  direction: string = 'to right'\n): string {\n  if (typeof colors === 'string') {\n    return colors;\n  }\n  if (Array.isArray(colors) && colors.length > 0) {\n    if (colors.length === 1) {\n      return colors[0];\n    }\n    return `linear-gradient(${direction}, ${colors.join(', ')})`;\n  }\n  return '';\n}\n\n/**\n * 创建 DocumentFragment（批量 DOM 操作优化）\n */\nexport function createFragment(children: HTMLElement[]): DocumentFragment {\n  const fragment = document.createDocumentFragment();\n  children.forEach(child => fragment.appendChild(child));\n  return fragment;\n}\n\n/**\n * 批量设置样式\n */\nexport function setStyles(\n  element: HTMLElement,\n  styles: Partial<CSSStyleDeclaration>\n): void {\n  Object.assign(element.style, styles);\n}\n\n/**\n * 获取元素的计算样式值\n */\nexport function getComputedStyleValue(\n  element: HTMLElement,\n  property: string\n): string {\n  return window.getComputedStyle(element).getPropertyValue(property);\n}\n\n/**\n * 防抖函数（增强版，支持立即执行和取消）\n */\nexport function debounceEnhanced<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number,\n  options: { leading?: boolean; trailing?: boolean; maxWait?: number } = {}\n): {\n  (...args: Parameters<T>): void;\n  cancel: () => void;\n  flush: () => void;\n} {\n  const { leading = false, trailing = true, maxWait } = options;\n\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n  let lastCallTime = 0;\n  let lastInvokeTime = 0;\n  let lastArgs: Parameters<T> | null = null;\n  let lastThis: any = null;\n\n  function invokeFunc(time: number) {\n    const args = lastArgs!;\n    const thisArg = lastThis;\n\n    lastArgs = null;\n    lastThis = null;\n    lastInvokeTime = time;\n    return func.apply(thisArg, args);\n  }\n\n  function shouldInvoke(time: number): boolean {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n\n    return (\n      lastCallTime === 0 ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxWait !== undefined && timeSinceLastInvoke >= maxWait)\n    );\n  }\n\n  function timerExpired() {\n    const time = Date.now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n    const timeUntilMaxWait = maxWait === undefined ? Infinity : maxWait - timeSinceLastInvoke;\n\n    timeout = setTimeout(timerExpired, Math.min(timeWaiting, timeUntilMaxWait));\n  }\n\n  function trailingEdge(time: number) {\n    timeout = null;\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = null;\n    lastThis = null;\n    return undefined;\n  }\n\n  function leadingEdge(time: number) {\n    lastInvokeTime = time;\n    timeout = setTimeout(timerExpired, wait);\n    return leading ? invokeFunc(time) : undefined;\n  }\n\n  function cancel() {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n    }\n    lastInvokeTime = 0;\n    lastArgs = null;\n    lastCallTime = 0;\n    lastThis = null;\n    timeout = null;\n  }\n\n  function flush() {\n    return timeout === null ? undefined : trailingEdge(Date.now());\n  }\n\n  function debounced(this: any, ...args: Parameters<T>) {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    lastArgs = args;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timeout === null) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxWait !== undefined) {\n        timeout = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timeout === null) {\n      timeout = setTimeout(timerExpired, wait);\n    }\n    return undefined;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n\n  return debounced;\n}\n\n/**\n * 节流函数（增强版，支持立即执行）\n */\nexport function throttleEnhanced<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number,\n  options: { leading?: boolean; trailing?: boolean } = {}\n): {\n  (...args: Parameters<T>): void;\n  cancel: () => void;\n} {\n  const { leading = true, trailing = true } = options;\n\n  return debounceEnhanced(func, limit, {\n    leading,\n    trailing,\n    maxWait: limit,\n  });\n}\n\n/**\n * 颜色转换：十六进制转 RGB\n */\nexport function hexToRgb(hex: string): { r: number; g: number; b: number } | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16),\n    }\n    : null;\n}\n\n/**\n * 颜色转换：RGB 转十六进制\n */\nexport function rgbToHex(r: number, g: number, b: number): string {\n  return '#' + [r, g, b].map(x => {\n    const hex = x.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  }).join('');\n}\n\n/**\n * 颜色混合\n */\nexport function blendColors(color1: string, color2: string, ratio: number): string {\n  const rgb1 = hexToRgb(color1);\n  const rgb2 = hexToRgb(color2);\n\n  if (!rgb1 || !rgb2) return color1;\n\n  const r = Math.round(rgb1.r * (1 - ratio) + rgb2.r * ratio);\n  const g = Math.round(rgb1.g * (1 - ratio) + rgb2.g * ratio);\n  const b = Math.round(rgb1.b * (1 - ratio) + rgb2.b * ratio);\n\n  return rgbToHex(r, g, b);\n}\n\n/**\n * 获取对比色（用于文本显示）\n */\nexport function getContrastColor(hexColor: string): string {\n  const rgb = hexToRgb(hexColor);\n  if (!rgb) return '#000000';\n\n  // 计算亮度\n  const brightness = (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  return brightness > 128 ? '#000000' : '#ffffff';\n}\n\n/**\n * 贝塞尔曲线路径生成\n */\nexport function createBezierPath(\n  points: { x: number; y: number }[],\n  tension: number = 0.5\n): string {\n  if (points.length < 2) return '';\n\n  let path = `M ${points[0].x} ${points[0].y}`;\n\n  for (let i = 0; i < points.length - 1; i++) {\n    const p0 = points[Math.max(i - 1, 0)];\n    const p1 = points[i];\n    const p2 = points[i + 1];\n    const p3 = points[Math.min(i + 2, points.length - 1)];\n\n    const cp1x = p1.x + (p2.x - p0.x) / 6 * tension;\n    const cp1y = p1.y + (p2.y - p0.y) / 6 * tension;\n    const cp2x = p2.x - (p3.x - p1.x) / 6 * tension;\n    const cp2y = p2.y - (p3.y - p1.y) / 6 * tension;\n\n    path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${p2.x} ${p2.y}`;\n  }\n\n  return path;\n}\n\n/**\n * 计算两点之间的距离\n */\nexport function distance(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\n\n/**\n * 规范化角度到 0-360 范围\n */\nexport function normalizeAngle(angle: number): number {\n  angle = angle % 360;\n  return angle < 0 ? angle + 360 : angle;\n}\n\n/**\n * 检测是否支持 OffscreenCanvas\n */\nexport function supportsOffscreenCanvas(): boolean {\n  return typeof OffscreenCanvas !== 'undefined';\n}\n\n/**\n * 检测是否为移动设备\n */\nexport function isMobile(): boolean {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\n/**\n * 检测是否支持触摸\n */\nexport function supportsTouch(): boolean {\n  return (\n    'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n    (navigator as any).msMaxTouchPoints > 0\n  );\n}\n\n/**\n * 安全执行函数（捕获错误）\n */\nexport function safeExecute<T>(\n  fn: () => T,\n  fallback?: T,\n  errorHandler?: (error: Error) => void\n): T | undefined {\n  try {\n    return fn();\n  } catch (error) {\n    if (errorHandler) {\n      errorHandler(error as Error);\n    } else {\n      console.error('Error in safeExecute:', error);\n    }\n    return fallback;\n  }\n}\n\n\n"],"names":[],"mappings":"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"}