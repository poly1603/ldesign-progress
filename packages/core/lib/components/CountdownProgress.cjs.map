{"version":3,"file":"CountdownProgress.cjs","sources":["../../src/components/CountdownProgress.ts"],"sourcesContent":["import { CountdownProgressOptions } from '../types';\nimport { ProgressBase } from '../base';\nimport { createSVGElement } from '../utils';\n\n/**\n * CountdownProgress - 倒计时进度条\n */\nexport class CountdownProgress extends ProgressBase<CountdownProgressOptions> {\n  private svg!: SVGSVGElement;\n  private trackCircle!: SVGCircleElement;\n  private progressCircle!: SVGCircleElement;\n  private timeText!: HTMLElement;\n  private labelText?: HTMLElement;\n  private circumference: number = 0;\n  private startTime: number = 0;\n  private duration: number = 0;\n  private timerInterval?: any;\n\n  protected getDefaultOptions(): Partial<CountdownProgressOptions> {\n    return {\n      ...super.getDefaultOptions(),\n      radius: 80,\n      strokeWidth: 10,\n      countdownDuration: 60, // 秒\n      showTime: true,\n      timeFormat: 'mm:ss',\n      autoStart: false,\n    };\n  }\n\n  protected render(): void {\n    this.container.innerHTML = '';\n\n    const radius = this.config.get('radius') ?? 80;\n    const strokeWidth = this.config.get('strokeWidth') ?? 10;\n    const size = (radius + strokeWidth) * 2;\n\n    // 创建 SVG\n    this.svg = createSVGElement('svg', {\n      width: size,\n      height: size,\n      viewBox: `0 0 ${size} ${size}`,\n      class: 'ld-progress-countdown',\n    }) as SVGSVGElement;\n\n    const className = this.config.get('className');\n    if (className) {\n      this.svg.classList.add(className);\n    }\n\n    this.container.appendChild(this.svg);\n\n    const center = size / 2;\n\n    // 创建轨道\n    this.trackCircle = createSVGElement('circle', {\n      cx: center,\n      cy: center,\n      r: radius,\n      fill: 'none',\n      stroke: '#e4e7ed',\n      'stroke-width': strokeWidth,\n      class: 'ld-progress-countdown__track',\n    }) as SVGCircleElement;\n    this.svg.appendChild(this.trackCircle);\n\n    // 创建进度圆\n    this.progressCircle = createSVGElement('circle', {\n      cx: center,\n      cy: center,\n      r: radius,\n      fill: 'none',\n      'stroke-width': strokeWidth,\n      'stroke-linecap': 'round',\n      class: 'ld-progress-countdown__progress',\n    }) as SVGCircleElement;\n\n    const color = this.config.get('color');\n    const strokeColor = Array.isArray(color) ? color[0] : color || '#409eff';\n    this.progressCircle.setAttribute('stroke', strokeColor);\n\n    this.circumference = 2 * Math.PI * radius;\n    this.progressCircle.setAttribute('stroke-dasharray', String(this.circumference));\n    this.progressCircle.style.transform = 'rotate(-90deg)';\n    this.progressCircle.style.transformOrigin = 'center';\n\n    this.svg.appendChild(this.progressCircle);\n\n    // 创建时间文本\n    this.timeText = document.createElement('div');\n    this.timeText.className = 'ld-progress-countdown__time';\n    this.timeText.style.position = 'absolute';\n    this.timeText.style.top = '50%';\n    this.timeText.style.left = '50%';\n    this.timeText.style.transform = 'translate(-50%, -50%)';\n    this.timeText.style.fontSize = '32px';\n    this.timeText.style.fontWeight = 'bold';\n    this.timeText.style.fontFamily = 'monospace';\n\n    this.container.style.position = 'relative';\n    this.container.style.display = 'inline-block';\n    this.container.appendChild(this.timeText);\n\n    // 标签文本\n    if (this.config.get('showText')) {\n      this.labelText = document.createElement('div');\n      this.labelText.className = 'ld-progress-countdown__label';\n      this.labelText.style.position = 'absolute';\n      this.labelText.style.bottom = '20px';\n      this.labelText.style.left = '50%';\n      this.labelText.style.transform = 'translateX(-50%)';\n      this.labelText.style.fontSize = '12px';\n      this.labelText.style.color = '#909399';\n      this.container.appendChild(this.labelText);\n    }\n\n    this.updateProgress(this.currentValue);\n\n    if (this.config.get('autoStart')) {\n      this.start();\n    }\n  }\n\n  /**\n   * 开始倒计时\n   */\n  start(): void {\n    this.duration = (this.config.get('countdownDuration') ?? 60) * 1000;\n    this.startTime = Date.now();\n\n    this.timerInterval = setInterval(() => {\n      const elapsed = Date.now() - this.startTime;\n      const remaining = Math.max(0, this.duration - elapsed);\n      const percentage = ((this.duration - remaining) / this.duration) * 100;\n\n      this.setValue(percentage, false);\n\n      if (remaining <= 0) {\n        this.stop();\n        this.emit('complete');\n      }\n    }, 100);\n  }\n\n  /**\n   * 停止倒计时\n   */\n  stop(): void {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = undefined;\n    }\n  }\n\n  /**\n   * 格式化时间\n   */\n  private formatTime(milliseconds: number): string {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n\n    const format = this.config.get('timeFormat') || 'mm:ss';\n\n    if (format === 'mm:ss') {\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    } else if (format === 'ss') {\n      return `${totalSeconds}s`;\n    } else if (format === 'mm') {\n      return `${minutes}m`;\n    }\n\n    return `${totalSeconds}`;\n  }\n\n  protected updateProgress(value: number): void {\n    const percentage = this.config.getPercentage(value);\n\n    // 更新圆形进度\n    const offset = this.circumference - (percentage / 100) * this.circumference;\n    this.progressCircle.setAttribute('stroke-dashoffset', String(offset));\n\n    // 更新时间显示\n    const duration = (this.config.get('countdownDuration') ?? 60) * 1000;\n    const remaining = duration * (1 - percentage / 100);\n\n    if (this.timeText) {\n      this.timeText.textContent = this.formatTime(remaining);\n    }\n\n    // 更新标签\n    if (this.labelText) {\n      if (percentage >= 100) {\n        this.labelText.textContent = '时间到！';\n      } else {\n        this.labelText.textContent = '剩余时间';\n      }\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  destroy(): void {\n    this.stop();\n    super.destroy();\n  }\n}\n\n\n\n"],"names":["ProgressBase","createSVGElement"],"mappings":"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"}