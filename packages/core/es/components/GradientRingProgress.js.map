{"version":3,"file":"GradientRingProgress.js","sources":["../../src/components/GradientRingProgress.ts"],"sourcesContent":["import { GradientRingProgressOptions } from '../types';\nimport { ProgressBase } from '../base';\nimport { createSVGElement } from '../utils';\n\n/**\n * GradientRingProgress - 圆锥渐变环形进度条\n */\nexport class GradientRingProgress extends ProgressBase<GradientRingProgressOptions> {\n  private svg!: SVGSVGElement;\n  private trackCircle!: SVGCircleElement;\n  private progressCircle!: SVGCircleElement;\n  private textElement?: HTMLElement;\n  private gradientId!: string;\n  private radius: number = 60;\n  private circumference: number = 0;\n\n  protected getDefaultOptions(): Partial<GradientRingProgressOptions> {\n    return {\n      ...super.getDefaultOptions(),\n      radius: 60,\n      strokeWidth: 12,\n      gradientColors: ['#ff0080', '#ff8c00', '#40e0d0', '#ff0080'],\n      trackColor: '#e4e7ed',\n      lineCap: 'round',\n      rotate: -90,\n    };\n  }\n\n  protected render(): void {\n    this.container.innerHTML = '';\n\n    this.radius = this.config.get('radius') ?? 60;\n    const strokeWidth = this.config.get('strokeWidth') ?? 12;\n    const size = (this.radius + strokeWidth) * 2;\n\n    // 创建 SVG\n    this.svg = createSVGElement('svg', {\n      width: size,\n      height: size,\n      viewBox: `0 0 ${size} ${size}`,\n      class: 'ld-progress-gradient-ring',\n    }) as SVGSVGElement;\n\n    const className = this.config.get('className');\n    if (className) {\n      this.svg.classList.add(className);\n    }\n\n    this.container.appendChild(this.svg);\n\n    // 创建圆锥渐变\n    this.createConicGradient();\n\n    const center = size / 2;\n\n    // 创建轨道圆\n    this.trackCircle = createSVGElement('circle', {\n      cx: center,\n      cy: center,\n      r: this.radius,\n      fill: 'none',\n      stroke: this.config.get('trackColor') || '#e4e7ed',\n      'stroke-width': strokeWidth,\n      class: 'ld-progress-gradient-ring__track',\n    }) as SVGCircleElement;\n    this.svg.appendChild(this.trackCircle);\n\n    // 创建进度圆\n    this.progressCircle = createSVGElement('circle', {\n      cx: center,\n      cy: center,\n      r: this.radius,\n      fill: 'none',\n      stroke: `url(#${this.gradientId})`,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': this.config.get('lineCap') || 'round',\n      class: 'ld-progress-gradient-ring__progress',\n    }) as SVGCircleElement;\n\n    // 计算周长\n    this.circumference = 2 * Math.PI * this.radius;\n    this.progressCircle.setAttribute('stroke-dasharray', String(this.circumference));\n\n    // 设置旋转\n    const rotate = this.config.get('rotate') ?? -90;\n    this.progressCircle.style.transform = `rotate(${rotate}deg)`;\n    this.progressCircle.style.transformOrigin = 'center';\n\n    this.svg.appendChild(this.progressCircle);\n\n    // 创建文本\n    if (this.config.get('showText')) {\n      this.textElement = document.createElement('div');\n      this.textElement.className = 'ld-progress-gradient-ring__text';\n      this.textElement.style.position = 'absolute';\n      this.textElement.style.top = '50%';\n      this.textElement.style.left = '50%';\n      this.textElement.style.transform = 'translate(-50%, -50%)';\n\n      this.container.style.position = 'relative';\n      this.container.style.display = 'inline-block';\n\n      this.container.appendChild(this.textElement);\n    }\n\n    this.updateProgress(this.currentValue);\n  }\n\n  /**\n   * 创建圆锥渐变（模拟）\n   */\n  private createConicGradient(): void {\n    this.gradientId = `gradient-ring-${this.id}`;\n\n    const defs = createSVGElement('defs') as SVGDefsElement;\n\n    // SVG 不直接支持圆锥渐变，使用线性渐变模拟\n    const gradientColors = this.config.get('gradientColors') || [\n      '#ff0080',\n      '#ff8c00',\n      '#40e0d0',\n      '#ff0080',\n    ];\n\n    const gradient = createSVGElement('linearGradient', {\n      id: this.gradientId,\n      x1: '0%',\n      y1: '0%',\n      x2: '100%',\n      y2: '100%',\n    }) as SVGLinearGradientElement;\n\n    gradientColors.forEach((color, index) => {\n      const offset = (index / (gradientColors.length - 1)) * 100;\n      const stop = createSVGElement('stop', {\n        offset: `${offset}%`,\n        'stop-color': color,\n      });\n      gradient.appendChild(stop);\n    });\n\n    defs.appendChild(gradient);\n    this.svg.appendChild(defs);\n  }\n\n  protected updateProgress(value: number): void {\n    const percentage = this.config.getPercentage(value);\n\n    // 更新进度圆\n    const offset = this.circumference - (percentage / 100) * this.circumference;\n    this.progressCircle.setAttribute('stroke-dashoffset', String(offset));\n\n    // 更新文本\n    if (this.textElement) {\n      this.textElement.textContent = this.formatText(value);\n    }\n  }\n\n  /**\n   * 设置渐变颜色\n   */\n  setGradientColors(colors: string[]): void {\n    this.config.set('gradientColors', colors);\n    this.render();\n  }\n}\n\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAOO,MAAM,6BAA6B,YAAA,CAA0C;AAAA,EAA7E,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA;AAML,IAAA,IAAA,CAAQ,MAAA,GAAiB,EAAA;AACzB,IAAA,IAAA,CAAQ,aAAA,GAAwB,CAAA;AAAA,EAAA;AAAA,EAEtB,iBAAA,GAA0D;AAClE,IAAA,OAAO;AAAA,MACL,GAAG,MAAM,iBAAA,EAAkB;AAAA,MAC3B,MAAA,EAAQ,EAAA;AAAA,MACR,WAAA,EAAa,EAAA;AAAA,MACb,cAAA,EAAgB,CAAC,SAAA,EAAW,SAAA,EAAW,WAAW,SAAS,CAAA;AAAA,MAC3D,UAAA,EAAY,SAAA;AAAA,MACZ,OAAA,EAAS,OAAA;AAAA,MACT,MAAA,EAAQ;AAAA,KACV;AAAA,EACF;AAAA,EAEU,MAAA,GAAe;AACvB,IAAA,IAAA,CAAK,UAAU,SAAA,GAAY,EAAA;AAE3B,IAAA,IAAA,CAAK,MAAA,GAAS,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,QAAQ,CAAA,IAAK,EAAA;AAC3C,IAAA,MAAM,WAAA,GAAc,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,aAAa,CAAA,IAAK,EAAA;AACtD,IAAA,MAAM,IAAA,GAAA,CAAQ,IAAA,CAAK,MAAA,GAAS,WAAA,IAAe,CAAA;AAG3C,IAAA,IAAA,CAAK,GAAA,GAAM,iBAAiB,KAAA,EAAO;AAAA,MACjC,KAAA,EAAO,IAAA;AAAA,MACP,MAAA,EAAQ,IAAA;AAAA,MACR,OAAA,EAAS,CAAA,IAAA,EAAO,IAAI,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA;AAAA,MAC5B,KAAA,EAAO;AAAA,KACR,CAAA;AAED,IAAA,MAAM,SAAA,GAAY,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,WAAW,CAAA;AAC7C,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,IAAA,CAAK,GAAA,CAAI,SAAA,CAAU,GAAA,CAAI,SAAS,CAAA;AAAA,IAClC;AAEA,IAAA,IAAA,CAAK,SAAA,CAAU,WAAA,CAAY,IAAA,CAAK,GAAG,CAAA;AAGnC,IAAA,IAAA,CAAK,mBAAA,EAAoB;AAEzB,IAAA,MAAM,SAAS,IAAA,GAAO,CAAA;AAGtB,IAAA,IAAA,CAAK,WAAA,GAAc,iBAAiB,QAAA,EAAU;AAAA,MAC5C,EAAA,EAAI,MAAA;AAAA,MACJ,EAAA,EAAI,MAAA;AAAA,MACJ,GAAG,IAAA,CAAK,MAAA;AAAA,MACR,IAAA,EAAM,MAAA;AAAA,MACN,MAAA,EAAQ,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,YAAY,CAAA,IAAK,SAAA;AAAA,MACzC,cAAA,EAAgB,WAAA;AAAA,MAChB,KAAA,EAAO;AAAA,KACR,CAAA;AACD,IAAA,IAAA,CAAK,GAAA,CAAI,WAAA,CAAY,IAAA,CAAK,WAAW,CAAA;AAGrC,IAAA,IAAA,CAAK,cAAA,GAAiB,iBAAiB,QAAA,EAAU;AAAA,MAC/C,EAAA,EAAI,MAAA;AAAA,MACJ,EAAA,EAAI,MAAA;AAAA,MACJ,GAAG,IAAA,CAAK,MAAA;AAAA,MACR,IAAA,EAAM,MAAA;AAAA,MACN,MAAA,EAAQ,CAAA,KAAA,EAAQ,IAAA,CAAK,UAAU,CAAA,CAAA,CAAA;AAAA,MAC/B,cAAA,EAAgB,WAAA;AAAA,MAChB,gBAAA,EAAkB,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,SAAS,CAAA,IAAK,OAAA;AAAA,MAChD,KAAA,EAAO;AAAA,KACR,CAAA;AAGD,IAAA,IAAA,CAAK,aAAA,GAAgB,CAAA,GAAI,IAAA,CAAK,EAAA,GAAK,IAAA,CAAK,MAAA;AACxC,IAAA,IAAA,CAAK,eAAe,YAAA,CAAa,kBAAA,EAAoB,MAAA,CAAO,IAAA,CAAK,aAAa,CAAC,CAAA;AAG/E,IAAA,MAAM,MAAA,GAAS,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,QAAQ,CAAA,IAAK,GAAA;AAC5C,IAAA,IAAA,CAAK,cAAA,CAAe,KAAA,CAAM,SAAA,GAAY,CAAA,OAAA,EAAU,MAAM,CAAA,IAAA,CAAA;AACtD,IAAA,IAAA,CAAK,cAAA,CAAe,MAAM,eAAA,GAAkB,QAAA;AAE5C,IAAA,IAAA,CAAK,GAAA,CAAI,WAAA,CAAY,IAAA,CAAK,cAAc,CAAA;AAGxC,IAAA,IAAI,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,UAAU,CAAA,EAAG;AAC/B,MAAA,IAAA,CAAK,WAAA,GAAc,QAAA,CAAS,aAAA,CAAc,KAAK,CAAA;AAC/C,MAAA,IAAA,CAAK,YAAY,SAAA,GAAY,iCAAA;AAC7B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,QAAA,GAAW,UAAA;AAClC,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,GAAA,GAAM,KAAA;AAC7B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,IAAA,GAAO,KAAA;AAC9B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,SAAA,GAAY,uBAAA;AAEnC,MAAA,IAAA,CAAK,SAAA,CAAU,MAAM,QAAA,GAAW,UAAA;AAChC,MAAA,IAAA,CAAK,SAAA,CAAU,MAAM,OAAA,GAAU,cAAA;AAE/B,MAAA,IAAA,CAAK,SAAA,CAAU,WAAA,CAAY,IAAA,CAAK,WAAW,CAAA;AAAA,IAC7C;AAEA,IAAA,IAAA,CAAK,cAAA,CAAe,KAAK,YAAY,CAAA;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKQ,mBAAA,GAA4B;AAClC,IAAA,IAAA,CAAK,UAAA,GAAa,CAAA,cAAA,EAAiB,IAAA,CAAK,EAAE,CAAA,CAAA;AAE1C,IAAA,MAAM,IAAA,GAAO,iBAAiB,MAAM,CAAA;AAGpC,IAAA,MAAM,cAAA,GAAiB,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,gBAAgB,CAAA,IAAK;AAAA,MAC1D,SAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA;AAAA,KACF;AAEA,IAAA,MAAM,QAAA,GAAW,iBAAiB,gBAAA,EAAkB;AAAA,MAClD,IAAI,IAAA,CAAK,UAAA;AAAA,MACT,EAAA,EAAI,IAAA;AAAA,MACJ,EAAA,EAAI,IAAA;AAAA,MACJ,EAAA,EAAI,MAAA;AAAA,MACJ,EAAA,EAAI;AAAA,KACL,CAAA;AAED,IAAA,cAAA,CAAe,OAAA,CAAQ,CAAC,KAAA,EAAO,KAAA,KAAU;AACvC,MAAA,MAAM,MAAA,GAAU,KAAA,IAAS,cAAA,CAAe,MAAA,GAAS,CAAA,CAAA,GAAM,GAAA;AACvD,MAAA,MAAM,IAAA,GAAO,iBAAiB,MAAA,EAAQ;AAAA,QACpC,MAAA,EAAQ,GAAG,MAAM,CAAA,CAAA,CAAA;AAAA,QACjB,YAAA,EAAc;AAAA,OACf,CAAA;AACD,MAAA,QAAA,CAAS,YAAY,IAAI,CAAA;AAAA,IAC3B,CAAC,CAAA;AAED,IAAA,IAAA,CAAK,YAAY,QAAQ,CAAA;AACzB,IAAA,IAAA,CAAK,GAAA,CAAI,YAAY,IAAI,CAAA;AAAA,EAC3B;AAAA,EAEU,eAAe,KAAA,EAAqB;AAC5C,IAAA,MAAM,UAAA,GAAa,IAAA,CAAK,MAAA,CAAO,aAAA,CAAc,KAAK,CAAA;AAGlD,IAAA,MAAM,MAAA,GAAS,IAAA,CAAK,aAAA,GAAiB,UAAA,GAAa,MAAO,IAAA,CAAK,aAAA;AAC9D,IAAA,IAAA,CAAK,cAAA,CAAe,YAAA,CAAa,mBAAA,EAAqB,MAAA,CAAO,MAAM,CAAC,CAAA;AAGpE,IAAA,IAAI,KAAK,WAAA,EAAa;AACpB,MAAA,IAAA,CAAK,WAAA,CAAY,WAAA,GAAc,IAAA,CAAK,UAAA,CAAW,KAAK,CAAA;AAAA,IACtD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB,MAAA,EAAwB;AACxC,IAAA,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,gBAAA,EAAkB,MAAM,CAAA;AACxC,IAAA,IAAA,CAAK,MAAA,EAAO;AAAA,EACd;AACF;;;;"}