{"version":3,"file":"AnimationController.js","sources":["../../src/utils/AnimationController.ts"],"sourcesContent":["import { EasingFunction, EasingFunctions } from '../types';\nimport { rafController, AnimationWrapper } from './RAFController';\nimport { generateId } from './helpers';\n\n/**\n * 动画控制器 - 使用 RAF 池化系统\n */\nexport class AnimationController {\n  private id: string;\n  private startTime: number = 0;\n  private startValue: number = 0;\n  private endValue: number = 0;\n  private duration: number = 0;\n  private easing: EasingFunction = EasingFunctions.easeOutQuad;\n  private animation: AnimationWrapper | null = null;\n  private isRunning: boolean = false;\n  private isPaused: boolean = false;\n  private pausedTime: number = 0;\n  private pausedDuration: number = 0;\n  private onUpdate?: (value: number) => void;\n  private onComplete?: () => void;\n\n  constructor() {\n    this.id = generateId('animation');\n  }\n\n  /**\n   * 启动动画\n   */\n  start(options: {\n    from: number;\n    to: number;\n    duration: number;\n    easing?: EasingFunction | keyof typeof EasingFunctions;\n    onUpdate?: (value: number) => void;\n    onComplete?: () => void;\n  }): void {\n    this.stop();\n\n    this.startValue = options.from;\n    this.endValue = options.to;\n    this.duration = options.duration;\n    this.onUpdate = options.onUpdate;\n    this.onComplete = options.onComplete;\n\n    if (typeof options.easing === 'string') {\n      this.easing = EasingFunctions[options.easing] || EasingFunctions.linear;\n    } else if (typeof options.easing === 'function') {\n      this.easing = options.easing;\n    }\n\n    this.startTime = performance.now();\n    this.isRunning = true;\n    this.isPaused = false;\n    this.pausedDuration = 0;\n\n    // 使用 RAF 池化系统\n    this.animation = new AnimationWrapper(\n      this.id,\n      (timestamp) => this.animate(timestamp),\n      0 // 默认优先级\n    );\n  }\n\n  /**\n   * 动画循环\n   */\n  private animate = (timestamp: number): void => {\n    if (!this.isRunning || this.isPaused) return;\n\n    const elapsed = timestamp - this.startTime - this.pausedDuration;\n    const progress = Math.min(elapsed / this.duration, 1);\n\n    const easedProgress = this.easing(progress);\n    const currentValue =\n      this.startValue + (this.endValue - this.startValue) * easedProgress;\n\n    if (this.onUpdate) {\n      this.onUpdate(currentValue);\n    }\n\n    if (progress >= 1) {\n      this.isRunning = false;\n      if (this.animation) {\n        this.animation.destroy();\n        this.animation = null;\n      }\n      if (this.onComplete) {\n        this.onComplete();\n      }\n    }\n  };\n\n  /**\n   * 暂停动画\n   */\n  pause(): void {\n    if (this.isRunning && !this.isPaused) {\n      this.isPaused = true;\n      this.pausedTime = performance.now();\n      if (this.animation) {\n        this.animation.pause();\n      }\n    }\n  }\n\n  /**\n   * 恢复动画\n   */\n  resume(): void {\n    if (this.isRunning && this.isPaused) {\n      const pauseDuration = performance.now() - this.pausedTime;\n      this.pausedDuration += pauseDuration;\n      this.isPaused = false;\n      if (this.animation) {\n        this.animation.resume();\n      }\n    }\n  }\n\n  /**\n   * 停止动画\n   */\n  stop(): void {\n    this.isRunning = false;\n    this.isPaused = false;\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = null;\n    }\n  }\n\n  /**\n   * 重置动画\n   */\n  reset(): void {\n    this.stop();\n    this.startTime = 0;\n    this.pausedTime = 0;\n    this.pausedDuration = 0;\n  }\n\n  /**\n   * 检查是否正在运行\n   */\n  isAnimating(): boolean {\n    return this.isRunning && !this.isPaused;\n  }\n\n  /**\n   * 获取动画 ID\n   */\n  getId(): string {\n    return this.id;\n  }\n}\n\n\n"],"names":[],"mappings":"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"}