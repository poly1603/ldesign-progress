{"version":3,"file":"CustomShapeProgress.js","sources":["../../src/components/CustomShapeProgress.ts"],"sourcesContent":["import { CustomShapeProgressOptions } from '../types';\r\nimport { ProgressBase } from '../base';\r\nimport { createSVGElement, setAttributes, parseGradient } from '../utils';\r\n\r\n/**\r\n * 自定义形状进度条\r\n */\r\nexport class CustomShapeProgress extends ProgressBase<CustomShapeProgressOptions> {\r\n  private svg!: SVGSVGElement;\r\n  private trackPath!: SVGPathElement;\r\n  private progressPath!: SVGPathElement;\r\n  private textElement?: HTMLElement;\r\n  private gradientId?: string;\r\n  private pathString: string = '';\r\n\r\n  protected getDefaultOptions(): Partial<CustomShapeProgressOptions> {\r\n    return {\r\n      ...super.getDefaultOptions(),\r\n      shapeWidth: 200,\r\n      shapeHeight: 200,\r\n      fillMode: 'solid',\r\n    };\r\n  }\r\n\r\n  protected render(): void {\r\n    // 清空容器\r\n    this.container.innerHTML = '';\r\n\r\n    // 获取形状路径\r\n    const shapePath = this.config.get('shapePath');\r\n    if (!shapePath) {\r\n      console.error('CustomShapeProgress: shapePath is required');\r\n      return;\r\n    }\r\n\r\n    const width = this.config.get('shapeWidth') ?? 200;\r\n    const height = this.config.get('shapeHeight') ?? 200;\r\n\r\n    // 生成路径字符串\r\n    if (typeof shapePath === 'function') {\r\n      this.pathString = shapePath(width as number, height as number);\r\n    } else {\r\n      this.pathString = shapePath;\r\n    }\r\n\r\n    // 创建SVG\r\n    this.svg = createSVGElement('svg', {\r\n      width,\r\n      height,\r\n      viewBox: `0 0 ${width} ${height}`,\r\n      class: 'ld-progress-custom-shape',\r\n    }) as SVGSVGElement;\r\n\r\n    // 添加自定义类名\r\n    const className = this.config.get('className');\r\n    if (className) {\r\n      this.svg.classList.add(className);\r\n    }\r\n\r\n    this.container.appendChild(this.svg);\r\n\r\n    // 创建渐变定义（如果需要）\r\n    const color = this.config.get('color');\r\n    if (Array.isArray(color) && color.length > 1) {\r\n      this.createGradient(color);\r\n    }\r\n\r\n    // 创建轨道路径\r\n    this.trackPath = createSVGElement('path', {\r\n      d: this.pathString,\r\n      fill: 'none',\r\n      stroke: this.config.get('trackColor') || '#e4e7ed',\r\n      'stroke-width': this.config.get('strokeWidth') || 6,\r\n      class: 'ld-progress-custom-shape__track',\r\n    }) as SVGPathElement;\r\n    this.svg.appendChild(this.trackPath);\r\n\r\n    // 创建进度路径\r\n    this.progressPath = createSVGElement('path', {\r\n      d: this.pathString,\r\n      fill: 'none',\r\n      'stroke-width': this.config.get('strokeWidth') || 6,\r\n      class: 'ld-progress-custom-shape__progress',\r\n    }) as SVGPathElement;\r\n\r\n    // 设置颜色\r\n    if (this.gradientId) {\r\n      this.progressPath.setAttribute('stroke', `url(#${this.gradientId})`);\r\n    } else if (typeof color === 'string') {\r\n      this.progressPath.setAttribute('stroke', color);\r\n    } else {\r\n      this.progressPath.setAttribute('stroke', '#409eff');\r\n    }\r\n\r\n    // 计算路径总长度\r\n    const pathLength = this.progressPath.getTotalLength();\r\n    this.progressPath.style.strokeDasharray = `${pathLength}`;\r\n    this.progressPath.style.strokeDashoffset = `${pathLength}`;\r\n    this.progressPath.style.transition = 'stroke-dashoffset 0.3s';\r\n\r\n    this.svg.appendChild(this.progressPath);\r\n\r\n    // 创建文本元素\r\n    if (this.config.get('showText')) {\r\n      this.textElement = document.createElement('div');\r\n      this.textElement.className = 'ld-progress-custom-shape__text';\r\n      this.textElement.style.position = 'absolute';\r\n      this.textElement.style.top = '50%';\r\n      this.textElement.style.left = '50%';\r\n      this.textElement.style.transform = 'translate(-50%, -50%)';\r\n      this.textElement.style.fontSize = '18px';\r\n      this.textElement.style.fontWeight = 'bold';\r\n\r\n      this.container.style.position = 'relative';\r\n      this.container.style.display = 'inline-block';\r\n      this.container.appendChild(this.textElement);\r\n    }\r\n\r\n    // 更新进度\r\n    this.updateProgress(this.currentValue);\r\n  }\r\n\r\n  protected createGradient(colors: string[]): void {\r\n    this.gradientId = `custom-gradient-${this.id}`;\r\n\r\n    const defs = createSVGElement('defs') as SVGDefsElement;\r\n    const gradient = createSVGElement('linearGradient', {\r\n      id: this.gradientId,\r\n      x1: '0%',\r\n      y1: '0%',\r\n      x2: '100%',\r\n      y2: '100%',\r\n    }) as SVGLinearGradientElement;\r\n\r\n    colors.forEach((color, index) => {\r\n      const offset = (index / (colors.length - 1)) * 100;\r\n      const stop = createSVGElement('stop', {\r\n        offset: `${offset}%`,\r\n        'stop-color': color,\r\n      });\r\n      gradient.appendChild(stop);\r\n    });\r\n\r\n    defs.appendChild(gradient);\r\n    this.svg.insertBefore(defs, this.svg.firstChild);\r\n  }\r\n\r\n  protected updateProgress(value: number): void {\r\n    if (!this.progressPath) return;\r\n\r\n    const percentage = this.config.getPercentage(value);\r\n    const pathLength = this.progressPath.getTotalLength();\r\n    const offset = pathLength - (percentage / 100) * pathLength;\r\n\r\n    this.progressPath.style.strokeDashoffset = `${offset}`;\r\n\r\n    // 更新文本\r\n    if (this.textElement) {\r\n      this.textElement.textContent = this.formatText(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置自定义路径\r\n   */\r\n  setShapePath(path: string | ((width: number, height: number) => string)): void {\r\n    this.config.set('shapePath', path);\r\n    this.render();\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAOO,MAAM,4BAA4B,YAAA,CAAyC;AAAA,EAA3E,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA;AAML,IAAA,IAAA,CAAQ,UAAA,GAAqB,EAAA;AAAA,EAAA;AAAA,EAEnB,iBAAA,GAAyD;AACjE,IAAA,OAAO;AAAA,MACL,GAAG,MAAM,iBAAA,EAAkB;AAAA,MAC3B,UAAA,EAAY,GAAA;AAAA,MACZ,WAAA,EAAa,GAAA;AAAA,MACb,QAAA,EAAU;AAAA,KACZ;AAAA,EACF;AAAA,EAEU,MAAA,GAAe;AAEvB,IAAA,IAAA,CAAK,UAAU,SAAA,GAAY,EAAA;AAG3B,IAAA,MAAM,SAAA,GAAY,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,WAAW,CAAA;AAC7C,IAAA,IAAI,CAAC,SAAA,EAAW;AACd,MAAA,OAAA,CAAQ,MAAM,4CAA4C,CAAA;AAC1D,MAAA;AAAA,IACF;AAEA,IAAA,MAAM,KAAA,GAAQ,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,YAAY,CAAA,IAAK,GAAA;AAC/C,IAAA,MAAM,MAAA,GAAS,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,aAAa,CAAA,IAAK,GAAA;AAGjD,IAAA,IAAI,OAAO,cAAc,UAAA,EAAY;AACnC,MAAA,IAAA,CAAK,UAAA,GAAa,SAAA,CAAU,KAAA,EAAiB,MAAgB,CAAA;AAAA,IAC/D,CAAA,MAAO;AACL,MAAA,IAAA,CAAK,UAAA,GAAa,SAAA;AAAA,IACpB;AAGA,IAAA,IAAA,CAAK,GAAA,GAAM,iBAAiB,KAAA,EAAO;AAAA,MACjC,KAAA;AAAA,MACA,MAAA;AAAA,MACA,OAAA,EAAS,CAAA,IAAA,EAAO,KAAK,CAAA,CAAA,EAAI,MAAM,CAAA,CAAA;AAAA,MAC/B,KAAA,EAAO;AAAA,KACR,CAAA;AAGD,IAAA,MAAM,SAAA,GAAY,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,WAAW,CAAA;AAC7C,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,IAAA,CAAK,GAAA,CAAI,SAAA,CAAU,GAAA,CAAI,SAAS,CAAA;AAAA,IAClC;AAEA,IAAA,IAAA,CAAK,SAAA,CAAU,WAAA,CAAY,IAAA,CAAK,GAAG,CAAA;AAGnC,IAAA,MAAM,KAAA,GAAQ,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,OAAO,CAAA;AACrC,IAAA,IAAI,MAAM,OAAA,CAAQ,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,CAAA,EAAG;AAC5C,MAAA,IAAA,CAAK,eAAe,KAAK,CAAA;AAAA,IAC3B;AAGA,IAAA,IAAA,CAAK,SAAA,GAAY,iBAAiB,MAAA,EAAQ;AAAA,MACxC,GAAG,IAAA,CAAK,UAAA;AAAA,MACR,IAAA,EAAM,MAAA;AAAA,MACN,MAAA,EAAQ,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,YAAY,CAAA,IAAK,SAAA;AAAA,MACzC,cAAA,EAAgB,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,aAAa,CAAA,IAAK,CAAA;AAAA,MAClD,KAAA,EAAO;AAAA,KACR,CAAA;AACD,IAAA,IAAA,CAAK,GAAA,CAAI,WAAA,CAAY,IAAA,CAAK,SAAS,CAAA;AAGnC,IAAA,IAAA,CAAK,YAAA,GAAe,iBAAiB,MAAA,EAAQ;AAAA,MAC3C,GAAG,IAAA,CAAK,UAAA;AAAA,MACR,IAAA,EAAM,MAAA;AAAA,MACN,cAAA,EAAgB,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,aAAa,CAAA,IAAK,CAAA;AAAA,MAClD,KAAA,EAAO;AAAA,KACR,CAAA;AAGD,IAAA,IAAI,KAAK,UAAA,EAAY;AACnB,MAAA,IAAA,CAAK,aAAa,YAAA,CAAa,QAAA,EAAU,CAAA,KAAA,EAAQ,IAAA,CAAK,UAAU,CAAA,CAAA,CAAG,CAAA;AAAA,IACrE,CAAA,MAAA,IAAW,OAAO,KAAA,KAAU,QAAA,EAAU;AACpC,MAAA,IAAA,CAAK,YAAA,CAAa,YAAA,CAAa,QAAA,EAAU,KAAK,CAAA;AAAA,IAChD,CAAA,MAAO;AACL,MAAA,IAAA,CAAK,YAAA,CAAa,YAAA,CAAa,QAAA,EAAU,SAAS,CAAA;AAAA,IACpD;AAGA,IAAA,MAAM,UAAA,GAAa,IAAA,CAAK,YAAA,CAAa,cAAA,EAAe;AACpD,IAAA,IAAA,CAAK,YAAA,CAAa,KAAA,CAAM,eAAA,GAAkB,CAAA,EAAG,UAAU,CAAA,CAAA;AACvD,IAAA,IAAA,CAAK,YAAA,CAAa,KAAA,CAAM,gBAAA,GAAmB,CAAA,EAAG,UAAU,CAAA,CAAA;AACxD,IAAA,IAAA,CAAK,YAAA,CAAa,MAAM,UAAA,GAAa,wBAAA;AAErC,IAAA,IAAA,CAAK,GAAA,CAAI,WAAA,CAAY,IAAA,CAAK,YAAY,CAAA;AAGtC,IAAA,IAAI,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,UAAU,CAAA,EAAG;AAC/B,MAAA,IAAA,CAAK,WAAA,GAAc,QAAA,CAAS,aAAA,CAAc,KAAK,CAAA;AAC/C,MAAA,IAAA,CAAK,YAAY,SAAA,GAAY,gCAAA;AAC7B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,QAAA,GAAW,UAAA;AAClC,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,GAAA,GAAM,KAAA;AAC7B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,IAAA,GAAO,KAAA;AAC9B,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,SAAA,GAAY,uBAAA;AACnC,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,QAAA,GAAW,MAAA;AAClC,MAAA,IAAA,CAAK,WAAA,CAAY,MAAM,UAAA,GAAa,MAAA;AAEpC,MAAA,IAAA,CAAK,SAAA,CAAU,MAAM,QAAA,GAAW,UAAA;AAChC,MAAA,IAAA,CAAK,SAAA,CAAU,MAAM,OAAA,GAAU,cAAA;AAC/B,MAAA,IAAA,CAAK,SAAA,CAAU,WAAA,CAAY,IAAA,CAAK,WAAW,CAAA;AAAA,IAC7C;AAGA,IAAA,IAAA,CAAK,cAAA,CAAe,KAAK,YAAY,CAAA;AAAA,EACvC;AAAA,EAEU,eAAe,MAAA,EAAwB;AAC/C,IAAA,IAAA,CAAK,UAAA,GAAa,CAAA,gBAAA,EAAmB,IAAA,CAAK,EAAE,CAAA,CAAA;AAE5C,IAAA,MAAM,IAAA,GAAO,iBAAiB,MAAM,CAAA;AACpC,IAAA,MAAM,QAAA,GAAW,iBAAiB,gBAAA,EAAkB;AAAA,MAClD,IAAI,IAAA,CAAK,UAAA;AAAA,MACT,EAAA,EAAI,IAAA;AAAA,MACJ,EAAA,EAAI,IAAA;AAAA,MACJ,EAAA,EAAI,MAAA;AAAA,MACJ,EAAA,EAAI;AAAA,KACL,CAAA;AAED,IAAA,MAAA,CAAO,OAAA,CAAQ,CAAC,KAAA,EAAO,KAAA,KAAU;AAC/B,MAAA,MAAM,MAAA,GAAU,KAAA,IAAS,MAAA,CAAO,MAAA,GAAS,CAAA,CAAA,GAAM,GAAA;AAC/C,MAAA,MAAM,IAAA,GAAO,iBAAiB,MAAA,EAAQ;AAAA,QACpC,MAAA,EAAQ,GAAG,MAAM,CAAA,CAAA,CAAA;AAAA,QACjB,YAAA,EAAc;AAAA,OACf,CAAA;AACD,MAAA,QAAA,CAAS,YAAY,IAAI,CAAA;AAAA,IAC3B,CAAC,CAAA;AAED,IAAA,IAAA,CAAK,YAAY,QAAQ,CAAA;AACzB,IAAA,IAAA,CAAK,GAAA,CAAI,YAAA,CAAa,IAAA,EAAM,IAAA,CAAK,IAAI,UAAU,CAAA;AAAA,EACjD;AAAA,EAEU,eAAe,KAAA,EAAqB;AAC5C,IAAA,IAAI,CAAC,IAAA,CAAK,YAAA;AAAc,MAAA;AAExB,IAAA,MAAM,UAAA,GAAa,IAAA,CAAK,MAAA,CAAO,aAAA,CAAc,KAAK,CAAA;AAClD,IAAA,MAAM,UAAA,GAAa,IAAA,CAAK,YAAA,CAAa,cAAA,EAAe;AACpD,IAAA,MAAM,MAAA,GAAS,UAAA,GAAc,UAAA,GAAa,GAAA,GAAO,UAAA;AAEjD,IAAA,IAAA,CAAK,YAAA,CAAa,KAAA,CAAM,gBAAA,GAAmB,CAAA,EAAG,MAAM,CAAA,CAAA;AAGpD,IAAA,IAAI,KAAK,WAAA,EAAa;AACpB,MAAA,IAAA,CAAK,WAAA,CAAY,WAAA,GAAc,IAAA,CAAK,UAAA,CAAW,KAAK,CAAA;AAAA,IACtD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,IAAA,EAAkE;AAC7E,IAAA,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,WAAA,EAAa,IAAI,CAAA;AACjC,IAAA,IAAA,CAAK,MAAA,EAAO;AAAA,EACd;AACF;;;;"}