{"version":3,"file":"TimelineProgress.cjs","sources":["../../src/components/TimelineProgress.ts"],"sourcesContent":["import { TimelineProgressOptions, TimelineEvent } from '../types';\nimport { ProgressBase } from '../base';\nimport { createElement, createFragment, toPx, setStyles } from '../utils';\n\n/**\n * 时间轴进度条 - 适用于历史事件、项目进度展示\n */\nexport class TimelineProgress extends ProgressBase<TimelineProgressOptions> {\n  private wrapper!: HTMLElement;\n  private timeline!: HTMLElement;\n  private events: HTMLElement[] = [];\n  private progressLine!: HTMLElement;\n\n  protected getDefaultOptions(): Partial<TimelineProgressOptions> {\n    return {\n      ...super.getDefaultOptions(),\n      layout: 'vertical',\n      events: [],\n      showDates: true,\n      showConnector: true,\n      connectorStyle: 'solid',\n      eventSize: 12,\n      spacing: 50,\n    };\n  }\n\n  protected render(): void {\n    // 清空容器\n    this.container.innerHTML = '';\n\n    const layout = this.config.get('layout') ?? 'vertical';\n\n    // 创建包装器\n    this.wrapper = createElement('div', `ld-progress-timeline ld-progress-timeline--${layout}`, this.container);\n\n    const className = this.config.get('className');\n    if (className) {\n      this.wrapper.classList.add(className);\n    }\n\n    // 创建时间轴容器\n    this.timeline = createElement('div', 'ld-progress-timeline__container', this.wrapper);\n\n    // 创建进度线\n    if (this.config.get('showConnector')) {\n      this.progressLine = createElement('div', 'ld-progress-timeline__line', this.timeline);\n      const connectorStyle = this.config.get('connectorStyle') ?? 'solid';\n      this.progressLine.style.borderStyle = connectorStyle;\n\n      const color = this.config.get('color');\n      if (color) {\n        const lineColor = Array.isArray(color) ? color[0] : color;\n        this.progressLine.style.borderColor = lineColor;\n      }\n    }\n\n    // 渲染事件\n    this.renderEvents();\n\n    // 更新进度\n    this.updateProgress(this.currentValue);\n  }\n\n  /**\n   * 渲染事件节点\n   */\n  private renderEvents(): void {\n    const events = this.config.get('events') ?? [];\n    const showDates = this.config.get('showDates') ?? true;\n    const layout = this.config.get('layout') ?? 'vertical';\n    const eventSize = this.config.get('eventSize') ?? 12;\n    const spacing = this.config.get('spacing') ?? 50;\n\n    this.events = [];\n\n    const eventElements: HTMLElement[] = [];\n\n    events.forEach((event, index) => {\n      // 事件容器\n      const eventContainer = createElement('div', 'ld-progress-timeline__event');\n\n      if (layout === 'vertical') {\n        eventContainer.style.marginTop = index === 0 ? '0' : `${spacing}px`;\n      } else {\n        eventContainer.style.marginLeft = index === 0 ? '0' : `${spacing}px`;\n      }\n\n      // 事件标记点\n      const marker = createElement('div', 'ld-progress-timeline__marker', eventContainer);\n      marker.style.width = toPx(eventSize);\n      marker.style.height = toPx(eventSize);\n\n      // 根据状态设置样式\n      if (event.status === 'completed') {\n        marker.classList.add('ld-progress-timeline__marker--completed');\n      } else if (event.status === 'active') {\n        marker.classList.add('ld-progress-timeline__marker--active');\n      } else if (event.status === 'pending') {\n        marker.classList.add('ld-progress-timeline__marker--pending');\n      }\n\n      // 自定义颜色\n      if (event.color) {\n        marker.style.backgroundColor = event.color;\n        marker.style.borderColor = event.color;\n      }\n\n      // 自定义图标\n      if (event.icon) {\n        marker.innerHTML = event.icon;\n      }\n\n      // 事件内容\n      const content = createElement('div', 'ld-progress-timeline__content', eventContainer);\n\n      // 日期\n      if (showDates && event.date) {\n        const dateEl = createElement('div', 'ld-progress-timeline__date', content);\n        dateEl.textContent = event.date;\n      }\n\n      // 标题\n      if (event.title) {\n        const titleEl = createElement('div', 'ld-progress-timeline__title', content);\n        titleEl.textContent = event.title;\n      }\n\n      // 描述\n      if (event.description) {\n        const descEl = createElement('div', 'ld-progress-timeline__description', content);\n        descEl.textContent = event.description;\n      }\n\n      // 自定义内容\n      if (event.customContent) {\n        const customEl = createElement('div', 'ld-progress-timeline__custom', content);\n        if (typeof event.customContent === 'string') {\n          customEl.innerHTML = event.customContent;\n        } else {\n          customEl.appendChild(event.customContent);\n        }\n      }\n\n      this.events.push(eventContainer);\n      eventElements.push(eventContainer);\n    });\n\n    // 批量添加到 DOM\n    if (eventElements.length > 0) {\n      const fragment = createFragment(eventElements);\n      this.timeline.appendChild(fragment);\n    }\n  }\n\n  protected updateProgress(value: number): void {\n    const percentage = this.config.getPercentage(value);\n    const events = this.config.get('events') ?? [];\n\n    // 计算已完成的事件数量\n    const completedCount = Math.floor((events.length * percentage) / 100);\n\n    // 更新事件状态\n    this.events.forEach((eventEl, index) => {\n      const marker = eventEl.querySelector('.ld-progress-timeline__marker');\n      if (!marker) return;\n\n      marker.classList.remove(\n        'ld-progress-timeline__marker--completed',\n        'ld-progress-timeline__marker--active',\n        'ld-progress-timeline__marker--pending'\n      );\n\n      if (index < completedCount) {\n        marker.classList.add('ld-progress-timeline__marker--completed');\n      } else if (index === completedCount) {\n        marker.classList.add('ld-progress-timeline__marker--active');\n      } else {\n        marker.classList.add('ld-progress-timeline__marker--pending');\n      }\n    });\n\n    // 更新进度线\n    if (this.progressLine) {\n      const layout = this.config.get('layout') ?? 'vertical';\n      if (layout === 'vertical') {\n        this.progressLine.style.height = `${percentage}%`;\n      } else {\n        this.progressLine.style.width = `${percentage}%`;\n      }\n    }\n  }\n\n  /**\n   * 添加事件\n   */\n  addEvent(event: TimelineEvent): void {\n    const events = this.config.get('events') ?? [];\n    events.push(event);\n    this.config.set('events', events);\n    this.render();\n  }\n\n  /**\n   * 移除事件\n   */\n  removeEvent(index: number): void {\n    const events = this.config.get('events') ?? [];\n    if (index >= 0 && index < events.length) {\n      events.splice(index, 1);\n      this.config.set('events', events);\n      this.render();\n    }\n  }\n\n  /**\n   * 更新事件\n   */\n  updateEvent(index: number, event: Partial<TimelineEvent>): void {\n    const events = this.config.get('events') ?? [];\n    if (index >= 0 && index < events.length) {\n      events[index] = { ...events[index], ...event };\n      this.config.set('events', events);\n      this.render();\n    }\n  }\n\n  /**\n   * 设置布局\n   */\n  setLayout(layout: 'vertical' | 'horizontal'): void {\n    this.config.set('layout', layout);\n    this.render();\n  }\n}\n\n\n\n\n"],"names":["ProgressBase","createElement","toPx","createFragment"],"mappings":"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"}