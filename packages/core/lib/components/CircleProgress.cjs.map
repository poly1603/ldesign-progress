{"version":3,"file":"CircleProgress.cjs","sources":["../../src/components/CircleProgress.ts"],"sourcesContent":["import { CircleProgressOptions } from '../types';\r\nimport { ProgressBase } from '../base';\r\nimport { createSVGElement, setAttributes, degToRad, parseGradient } from '../utils';\r\n\r\n/**\r\n * 圆形进度条\r\n */\r\nexport class CircleProgress extends ProgressBase<CircleProgressOptions> {\r\n  protected svg!: SVGSVGElement;\r\n  protected trackCircle!: SVGCircleElement;\r\n  protected progressCircle!: SVGCircleElement;\r\n  protected textElement?: HTMLElement;\r\n  protected gradientId?: string;\r\n  protected radius: number = 50;\r\n  protected circumference: number = 0;\r\n\r\n  protected getDefaultOptions(): Partial<CircleProgressOptions> {\r\n    return {\r\n      ...super.getDefaultOptions(),\r\n      radius: 50,\r\n      strokeWidth: 6,\r\n      clockwise: true,\r\n      startAngle: -90,\r\n      lineCap: 'round',\r\n    };\r\n  }\r\n\r\n  protected render(): void {\r\n    // 清空容器\r\n    this.container.innerHTML = '';\r\n\r\n    // 计算参数\r\n    this.radius = this.config.get('radius') ?? 50;\r\n    const strokeWidth = this.config.get('strokeWidth') ?? 6;\r\n    const size = (this.radius + strokeWidth) * 2;\r\n\r\n    // 创建SVG\r\n    this.svg = createSVGElement('svg', {\r\n      width: size,\r\n      height: size,\r\n      viewBox: `0 0 ${size} ${size}`,\r\n      class: 'ld-progress-circle',\r\n    }) as SVGSVGElement;\r\n\r\n    // 添加自定义类名\r\n    const className = this.config.get('className');\r\n    if (className) {\r\n      this.svg.classList.add(className);\r\n    }\r\n\r\n    this.container.appendChild(this.svg);\r\n\r\n    // 创建渐变定义（如果需要）\r\n    const color = this.config.get('color');\r\n    if (Array.isArray(color) && color.length > 1) {\r\n      this.createGradient(color);\r\n    }\r\n\r\n    // 创建轨道圆\r\n    const center = size / 2;\r\n    this.trackCircle = createSVGElement('circle', {\r\n      cx: center,\r\n      cy: center,\r\n      r: this.radius,\r\n      fill: 'none',\r\n      stroke: this.config.get('trackColor') || '#e4e7ed',\r\n      'stroke-width': strokeWidth,\r\n      class: 'ld-progress-circle__track',\r\n    }) as SVGCircleElement;\r\n    this.svg.appendChild(this.trackCircle);\r\n\r\n    // 创建进度圆\r\n    this.progressCircle = createSVGElement('circle', {\r\n      cx: center,\r\n      cy: center,\r\n      r: this.radius,\r\n      fill: 'none',\r\n      'stroke-width': strokeWidth,\r\n      'stroke-linecap': this.config.get('lineCap') ?? 'round',\r\n      class: 'ld-progress-circle__progress',\r\n    }) as SVGCircleElement;\r\n\r\n    // 设置颜色\r\n    if (this.gradientId) {\r\n      this.progressCircle.setAttribute('stroke', `url(#${this.gradientId})`);\r\n    } else if (typeof color === 'string') {\r\n      this.progressCircle.setAttribute('stroke', color);\r\n    }\r\n\r\n    // 计算周长\r\n    this.circumference = 2 * Math.PI * this.radius;\r\n    this.progressCircle.setAttribute('stroke-dasharray', `${this.circumference}`);\r\n\r\n    // 设置旋转\r\n    const startAngle = this.config.get('startAngle') ?? -90;\r\n    const clockwise = this.config.get('clockwise') ?? true;\r\n    this.progressCircle.style.transform = `rotate(${startAngle}deg)`;\r\n    this.progressCircle.style.transformOrigin = 'center';\r\n    \r\n    if (!clockwise) {\r\n      this.progressCircle.style.transform += ' scaleX(-1)';\r\n    }\r\n\r\n    this.svg.appendChild(this.progressCircle);\r\n\r\n    // 创建文本元素\r\n    if (this.config.get('showText')) {\r\n      this.textElement = document.createElement('div');\r\n      this.textElement.className = 'ld-progress-circle__text';\r\n      this.textElement.style.position = 'absolute';\r\n      this.textElement.style.top = '50%';\r\n      this.textElement.style.left = '50%';\r\n      this.textElement.style.transform = 'translate(-50%, -50%)';\r\n      \r\n      // 设置容器为相对定位\r\n      this.container.style.position = 'relative';\r\n      this.container.style.display = 'inline-block';\r\n      \r\n      this.container.appendChild(this.textElement);\r\n    }\r\n\r\n    // 更新进度\r\n    this.updateProgress(this.currentValue);\r\n  }\r\n\r\n  protected createGradient(colors: string[]): void {\r\n    this.gradientId = `gradient-${this.id}`;\r\n    \r\n    const defs = createSVGElement('defs') as SVGDefsElement;\r\n    const gradient = createSVGElement('linearGradient', {\r\n      id: this.gradientId,\r\n      x1: '0%',\r\n      y1: '0%',\r\n      x2: '100%',\r\n      y2: '0%',\r\n    }) as SVGLinearGradientElement;\r\n\r\n    colors.forEach((color, index) => {\r\n      const offset = (index / (colors.length - 1)) * 100;\r\n      const stop = createSVGElement('stop', {\r\n        offset: `${offset}%`,\r\n        'stop-color': color,\r\n      });\r\n      gradient.appendChild(stop);\r\n    });\r\n\r\n    defs.appendChild(gradient);\r\n    this.svg.insertBefore(defs, this.svg.firstChild);\r\n  }\r\n\r\n  protected updateProgress(value: number): void {\r\n    const percentage = this.config.getPercentage(value);\r\n    \r\n    // 更新进度圆\r\n    const offset = this.circumference - (percentage / 100) * this.circumference;\r\n    this.progressCircle.setAttribute('stroke-dashoffset', `${offset}`);\r\n\r\n    // 更新文本\r\n    if (this.textElement) {\r\n      this.textElement.textContent = this.formatText(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置半径\r\n   */\r\n  setRadius(radius: number): void {\r\n    this.config.set('radius', radius);\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 设置方向\r\n   */\r\n  setClockwise(clockwise: boolean): void {\r\n    this.config.set('clockwise', clockwise);\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 设置起始角度\r\n   */\r\n  setStartAngle(angle: number): void {\r\n    this.config.set('startAngle', angle);\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 设置线帽样式\r\n   */\r\n  setLineCap(lineCap: 'round' | 'square' | 'butt'): void {\r\n    this.config.set('lineCap', lineCap);\r\n    if (this.progressCircle) {\r\n      this.progressCircle.setAttribute('stroke-linecap', lineCap);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"],"names":["ProgressBase","createSVGElement"],"mappings":"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"}